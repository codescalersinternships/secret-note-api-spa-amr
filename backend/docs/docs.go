// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "post": {
                "description": "Create a new note with a unique URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Create a new note",
                "parameters": [
                    {
                        "description": "Note to create",
                        "name": "note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Note"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Note created successfully",
                        "schema": {
                            "$ref": "#/definitions/main.NoteResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/{url}": {
            "get": {
                "description": "View a note content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "View a note",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Note URL",
                        "name": "url",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Note retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/main.NoteResponse"
                        }
                    },
                    "400": {
                        "description": "Record not found",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    },
                    "410": {
                        "description": "Note is expired",
                        "schema": {
                            "$ref": "#/definitions/main.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "main.NoteResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.Note"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.Note": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "expire_after": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "max_views": {
                    "type": "integer"
                },
                "publish_date": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "views": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Secret Note API",
	Description:      "This is a simple API for sharing secret notes.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
